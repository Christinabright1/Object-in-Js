# Object-in-Js


let dragon= {
  name: 'Tanya',
  fire: true,
  fight(){
    return 5;
  },
  sing(){
    if(this.fire){ //if fire is true return sing
       return `I am ${this.name}, the breater of fire`;
    }
  
  }
}

dragon.sing();
//lizzard object will inherit from dragon object
let lizzard= {
  name: "kiki",
  fight(){
    return 1;
  }
}

lizzard.__proto__ = dragon;
console.log(lizzard.sing());//lizzard inherit sing from dragon if fire is true


const singLizzard= dragon.sing.bind(lizzard);//lizzard inherit sing from dragon if fire is true or not


console.log(singLizzard());



// Mofify .map() to print 'ðŸ—º' at the end of each item.
//adding map method to the prototype
Array.prototype.map= function(){
  let arr= [];
  //loop through array that we have
  for(let i =0; i< this.length; i++ ){
    arr.push(this[i]+'ðŸ—º')
  }
  return arr;
}
console.log([1,2,3].map());


